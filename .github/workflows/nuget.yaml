name: NuGet

on:
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

permissions:
  contents: read
  actions: write
  id-token: write

jobs:
  update:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: ENV
        run: |
          Get-ChildItem env: | Out-Host

      - name: Get ID-Token
        run: |
          function Parse-JWTtoken([string]$token) {
            if ($token.Contains(".") -and $token.StartsWith("eyJ")) {
              $tokenHeader = $token.Split(".")[0].Replace('-', '+').Replace('_', '/')
              while ($tokenHeader.Length % 4) { $tokenHeader += "=" }
              Write-Host ([System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($tokenHeader)) | ConvertFrom-Json)
              $tokenPayload = $token.Split(".")[1].Replace('-', '+').Replace('_', '/')
              while ($tokenPayload.Length % 4) { $tokenPayload += "=" }
              return [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($tokenPayload)) | ConvertFrom-Json
            }
            throw "Invalid token"
          }
          $erroractionpreference = "stop"
          Write-Host "Query federated token"
          Write-Host "$ENV:ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange"
          $result = Invoke-RestMethod -Method GET -UseBasicParsing -Headers @{ "Authorization" = "bearer $ENV:ACTIONS_ID_TOKEN_REQUEST_TOKEN"; "Accept" = "application/vnd.github+json" } -Uri "$ENV:ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://AzureADTokenExchange"
          Parse-JWTToken($result.value) | Out-Host
          $body = @{
            "client_id" = "a26651f5-0e90-473c-b4f9-e96119aac8b8"
            "client_assertion_type" = "urn:ietf:params:oauth:client-assertion-type:jwt-bearer"
            "client_assertion" = $result.value
            "grant_type" =" client_credentials"
            "scope" = "499b84ac-1321-427f-aa17-267ca6975798/.default"
          }
          $tenantId = '72f988bf-86f1-41af-91ab-2d7cd011db47'
          $tenantId = 'f97b6981-e782-49dd-9fd3-3e3753aece3b'
          $result2 = Invoke-RestMethod -Method POST -Headers @{ "Content-Type" = "application/x-www-form-urlencoded" } -Body $body -UseBasicParsing -uri "https://login.microsoftonline.com/$tenantId/oauth2/v2.0/token"
          $accessToken = $result2.access_token
          Write-Host "::mask::$accessToken"
          $feedUrl = 'https://pkgs.dev.azure.com/naverticapartners/AppSource%20Partners/_packaging/Test/nuget/v3/index.json'
          $headers = @{
            "Content-Type" = "application/json; charset=utf-8"
            "Authorization" = "Basic $([Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("user:$accessToken")))"
          }
          $capabilities = Invoke-RestMethod -UseBasicParsing -Method GET -Headers $headers -Uri $feedUrl
          $searchQueryServiceUrl = $capabilities.resources | Where-Object { $_.'@type' -eq 'SearchQueryService/3.0.0-beta' } | Select-Object -ExpandProperty '@id' | Select-Object -First 1
          Write-Host $searchQueryServiceUrl          

